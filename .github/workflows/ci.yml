---
  name: CI 
  on:
    push:
      branches:
        - main
    pull_request:
  
  jobs:
    build-test-image:
      name: Build Test Image
      runs-on: ubuntu-latest
  
      permissions:
        packages: write 
  
      steps:
        
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
 
        - name: Login to ghcr.io
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        
        - name: Build and Push to GHCR
          uses: docker/build-push-action@v5
          with:
            push: true
            tags: ghcr.io/iypetrov/go-calc:${{ github.run_id }}
            cache-from: type=gha
            cache-to: type=gha,mode=max
            platforms: linux/amd64

    test-unit:
      name: Unit tests in Docker
      needs: [build-test-image]
      runs-on: ubuntu-latest
  
      permissions:
        packages: read
        
      steps:
        
        - name: Login to ghcr.io
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        
        - name: Unit Testing in Docker
          run: docker run --rm ghcr.io/iypetrov/go-calc:"$GITHUB_RUN_ID" make test

    scan-image:
            name: Scan image for vulnerabilities
            needs: [build-test-image]
            runs-on: ubuntu-latest
        
            permissions:
              contents: read
              packages: read
              security-events: write 
        
            steps:
        
              - name: Checkout git repo
                uses: actions/checkout@v4
              
              - name: Login to ghcr.io
                uses: docker/login-action@v3
                with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
        
              - name: Pull image to scan
                run: docker pull ghcr.io/iypetrov/go-cacl:"$GITHUB_RUN_ID"
                
              - name: Run Trivy for all CVEs (non-blocking)
                uses: aquasecurity/trivy-action@master
                with:
                  image-ref: ghcr.io/iypetrov/go-calc:${{ github.run_id }}
                  format: table
                  exit-code: 0
        
              - name: Run Trivy for HIGH / CRITICAL CVEs and report (blocking)
                uses: aquasecurity/trivy-action@master
                with:
                  image-ref: ghcr.io/iypetrov/go-calc:${{ github.run_id }}
                  exit-code: 1
                  ignore-unfixed: true
                  vuln-type: 'os,library'
                  severity: 'HIGH,CRITICAL'
                  format: 'sarif'
                  output: 'trivy-results.sarif'
              
              - name: Upload Trivy scan results to GitHub Security tab
                uses: github/codeql-action/upload-sarif@v1
                if: always()
                with:
                  sarif_file: 'trivy-results.sarif' 